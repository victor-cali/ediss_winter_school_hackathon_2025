services:


# MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto_broker
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/mosquitto_config:/mosquitto/config
    restart: always
    networks:
      ppe_network:
        ipv4_address: 192.168.100.101  # Static IP for MQTT Broker

# Database 
  db-service:
    build: ./database
    container_name: edgedevice-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: edgedevicedb
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: # Add the networks section here
      ppe_network:

  # Flask application
  backend-service:
    build: ./backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db-service
      - DB_PORT=5432
      - DB_NAME=edgedevicedb
      - MQTT_BROKER=mosquitto
    depends_on:
      db-service:
        condition: service_healthy
      mosquitto:
        condition: service_started
    networks: # Add the networks section here
      ppe_network:


# # Edge Device
#   edge_device:
#     build: ./edge_device
#     container_name: edge_device
#     depends_on:
#       - mosquitto
#     restart: always
#     networks:
#       ppe_network:
#         ipv4_address: 192.168.100.103



networks:
  ppe_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24  